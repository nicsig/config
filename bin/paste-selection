#!/bin/bash

# Purpose: Paste the primary selection in the terminal.
# Dependencies: xvkbd
# Limitation: Sometimes, the contents of the primary clipboard gets erased (`$ xsel -p` is empty).
# It happens if you  invoke the script multiple times too  fast (e.g. the script
# can be invoked by a key binding, and you maintain the latter pressed for a few seconds).
# Source:
# https://askubuntu.com/a/7807/867754
# https://unix.stackexchange.com/a/11890/289772

# Add bracketed paste mode sequences{{{
#
# ... to prevent the shell from automatically processing the input buffer if the
# pasted text contains a newline.
#
# Alternatively, you could also try to  use the tmux command `paste-buffer`, and
# pass it the `-p` option.
#}}}
selection="$(xsel -p)"
seq="\e[200~${selection}\e[201~"
# FIXME: Doesn't work in gnome-terminal nor in xterm.  But works in st and urxvt.{{{
#
# MWE:
#
#     $ printf "test" | xvkbd -xsendevent -file -
#
# You could make the command work in xterm by adding this line in `~/.Xresources`:
#
#     XTerm*allowSendEvents: true
#
# But, it would disable `allowWindowOps`.
# From `man xterm /allowSendEvents (`:
#
# >     Note that  allowing such  events would  create a  very large  security hole,
# >     therefore  enabling  this  resource   forcefully  disables  the  allowXXXOps
# >     resources.
#
# Because of  this, you wouldn't be  able to use  OSC sequences, like OSC  52 to
# get/set the clipboard, and OSC 4 to get/set a color in the 256-color palette.
#
# ---
#
# Alternative:
#
#     XTerm*VT100.Translations: #override \
#                      Ctrl Shift <Key>V:    insert-selection(CLIPBOARD) \n\
#                      Ctrl Shift <Key>C:    copy-selection(CLIPBOARD) \n\
#                      Ctrl Shift <Key>E:    insert-selection(PRIMARY)
#                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#
# It works, and is probably better, but you have to use a key different than `f`:
#
#                      Ctrl Shift <Key>E:    insert-selection(PRIMARY)
#                                      ^
#
# That's probably because we currently bind this script to `C-S-f` via `xbindkeys(1)`.
#}}}
# FIXME: fails on non-ascii characters (e.g. 'éòü'){{{
#
#     $ xvkbd -text 'éòü' 2>/dev/null
#     Ã©Ã²Ã¼~
#
# ---
#
# Solution: Try  to get  the  primary selection,  then use  it  to populate  the
# clipboard selection, and finally run `xdotool(1)` to simulate `C-S-v`.
#
#     # get the primary selection
#     text="\e[200~$(xsel -p)\e[201~"
#     # populate the clipboard selection with the primary selection
#     printf -- '%b' "${text}" | xsel -i --clipboard
#     # simulate a press on C-S-v
#     xdotool key 'ctrl+shift+v'
#
# The code works, except for the last `xdotool(1)` command.
# The syntax seems good, since the command works when run in an interactive shell.
#
# The issue can be reproduced with just the `xdotool(1)` command.
# But  only  if  we invoke  this  script  via  the  key binding  installed  from
# `~/.config/keyboard/xbindkeys.conf`.
# Btw,  in the  latter file,  right above  the key  binding, we've  written that
# `xdotool(1)` was to avoid; I wonder whether  that has something to do with our
# current issue.
#}}}
printf -- '%b' "${seq}" | xvkbd -xsendevent -file - 2>/dev/null

# Rewrite the  text in the primary  clipboard, because for some  reason, it gets
# erased after `xvkbd(1)` is invoked.
printf -- '%s' "${selection}" | xsel -i -p

# `-xsendevent` {{{
#
# >     Make xvkbd to use XSendEvent() to simulate keyboard events,  as  it
# >     was  in xvkbd version 1.0.  xvkbd version 1.1 and later will try to
# >     use XTEST extension instead in the default configuration.
# >     If XTEST extension is not supported by the  X  server,  xvkbd  will
# >     automatically switch to this mode.
# >     Resource `xvkbd.xtest: false` has the same function.
#}}}
# `-file filename` {{{
# >     Send the contents of the specified file to the focused window  (see
# >     also  `-window`  option).   If `-` was specified as the filename,
# >     string to be sent will be read from the standard input (stdin).
# >     If this option is specified, xvkbd will not  open  its  window  and
# >     terminate soon after sending the string.
#}}}
