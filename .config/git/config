[alias]
    ; How do git aliases work?{{{
    ;
    ; https://git-scm.com/book/en/v2/Git-Basics-Git-Aliases
    ;}}}
    ; Why are they better than shell aliases?{{{
    ;
    ; https://www.reddit.com/r/git/comments/9drimq/aliases_git_or_bash/e5jmol0/
    ;}}}
    ; How to make a git alias run shell code?{{{
    ;
    ; https://github.com/alfunx/.dotfiles/blob/c55e6ee07132f367847fb544fd8e9b01aa03d34c/.gitconfig#L230-L444
    ;
    ; Example:
    ;
    ;     dr = "!f() { git diff -c ${1:-HEAD}~..${1:-HEAD}; }; f"
    ;}}}
    bir=bisect reset
    br=branch
    ch=checkout
    chm=checkout master
    ci=commit
    cl=clone
    st=status -s
    ;          │
    ;          └ `--short`, give the output in the short-format
[color]
	diff = auto
	status = auto
	branch = auto
[commit]
	template = ~/.config/git/message.txt
        ; When I'm writing a commit message, show me unified diff between the HEAD commit and what would be committed.{{{
        ;
        ; Useful to  get reminded of what  changes the commit includes,  and use
        ; that info to write a better commit title.
        ;
        ; See the commit.verbose configuration variable in `man git-config(1)`.
        ;}}}
	verbose = true
[core]
	editor = vim
	excludesfile = ~/.cvsignore
[credential]
	helper = cache --timeout=14400
[help]
	autocorrect = 10
[merge]
	tool = vimdiff
[push]
        ; Get rid of annoying  message when we push a branch  without providing any name.{{{
        ;
        ;     `$ git push`
        ;
        ;     https://stackoverflow.com/a/13148313/9690698
        ;}}}
	default = simple
[user]
	name = nicsig
	email = nicsig@nicsig.me
[diff]
        ; use "patience diff" algorithm when generating patches
        ; `man git-config /diff\.algorithm`
	algorithm = patience
        ; enable experimental heuristics that shift diff hunk boundaries to make patches easier to read
        ; `man git-config /diff\.indentHeuristic`
        indentHeuristic = true
[advice]
        ; Do NOT show directions on how to proceed from the current state in the output of git-status(1),
        ;
        ; as  well as  in the  template shown  when writing  commit messages  in
        ; git-commit(1), and  in the help  message shown by  gitcheckout(1) when
        ; switching branch.
        ;
	statusHints = false
