# What's this file?{{{
#
# It's used by one of our custom service:
#
#       /etc/systemd/system/getty@.service.d/keyboard-layout.conf
#
# to customize the keyboard layout in a virtual console.
#}}}
# Where can I find more information about its syntax?{{{
#
#     $ man 5 keymaps
#}}}
# How to get the code number of a key?{{{
#
# It's not the same code as the one used by `$ xmodmap`, so don't use `$ xev`.
# Instead, use `$ showkey` (in a console).
#}}}
# How to get the current layout?{{{
#
# In a console, execute:
#
#     $ dumpkeys >/tmp/dumpkeys
#
# The file you get is useful to find the keysym you need to perform some action.
#}}}

altgr keycode 3 = less
altgr keycode 4 = greater
altgr keycode 16 = bar
altgr keycode 17 = parenleft
altgr keycode 18 = parenright
altgr keycode 20 = grave
altgr keycode 30 = equal
altgr keycode 31 = bracketleft
altgr keycode 32 = bracketright
altgr keycode 33 = minus
altgr keycode 34 = plus
altgr keycode 36 = asterisk
altgr keycode 37 = numbersign
altgr keycode 45 = braceleft
altgr keycode 46 = braceright
altgr keycode 47 = v
altgr keycode 48 = asciitilde
altgr keycode 57 = underscore

# we want to use M-j and M-k to scroll (instead of S-PgUp S-PgDown)
alt keycode 36 = Scroll_Forward
alt keycode 37 = Scroll_Backward

# What does this `keymaps` statement do?{{{
#
# It indicates that the following lines will not specify all the 256 columns.
# Only the ones whose index is 0, 1, 2, 4, 6, 8, 12.
# IOW:
#
#     keymaps 0-2,4,6,8,12
#     keycode 58 = Control
# ⇔
#     keycode 58 = Control Control Control VoidSymbol Control VoidSymbol ...
#                  0       1       2                  4                  ...
#
# I chose these indexes by copying:
#
#     /usr/share/keymaps/i386/azerty/fr-pc.kmap.gz:6
#
# They stand for some combinations of modifiers:
#
#    ┌────┬─────────────────┐
#    │ 0  │ no modifier     │
#    ├────┼─────────────────┤
#    │ 1  │ Shift           │
#    ├────┼─────────────────┤
#    │ 2  │ AltGr           │
#    ├────┼─────────────────┤
#    │ 4  │ Control         │
#    ├────┼─────────────────┤
#    │ 6  │ AltGr + Control │
#    ├────┼─────────────────┤
#    │ 8  │ Alt             │
#    ├────┼─────────────────┤
#    │ 12 │ Alt + Control   │
#    └────┴─────────────────┘
#}}}
# Why is it necessary?{{{
#
# Suppose you just write:
#
#     keycode 58 = Control
#
# It seems it would be equivalent to:
#
#     keycode 58 = Control VoidSymbol ...
#                          ├────────────┘
#                          └ 256 times
#
# Now suppose you press the Capslock key.
# It will put the Control modifier in effect.
# When you'll release the Capslock key, the action from the fifth column will be
# taken.
# The latter is VoidSymbol, so nothing happens.
# As a result, the Control modifier is still in effect.
# IOW, even though you've released Capslock,  the next key you press will behave
# as if you were combining it with Control.
#
# To  avoid this,  you should  always define all  the columns  to have  the same
# modifier symbol.
#
# This is explained in `man 5 keymaps`.
#
# ---
#
# Btw, why is the action from the fifth column taken, and not the first?
# Because the effective action of a key is found out by adding up the weights of
# all the modifiers in effect:
#
#     modifier            weight
#
#     Shift                  1
#     AltGr                  2
#     Control                4
#     Alt                    8
#     ShiftL                16
#     ShiftR                32
#     CtrlL                 64
#     CtrlR                128
#     CapsShift            256
#
# So, for Control, the weight of all the modifiers is 4.
# But you have  to add 1, because  the first column stands for  the action taken
# when no modifier is in effect (you can see it as a column indexed by 0).
#
# ---
#
# Note that I don't understand this equivalence:
#
#     keycode 58 = Control
# ⇔
#     keycode 58 = Control VoidSymbol ...
#                          ├────────────┘
#                          └ 256 times
#
# According to `man 5 keysyms`, if you write only 1 keysym in an assignment, and
# if it's not a letter, it should be repeated for all the columns.
# So, we should have this equivalence:
#
#     keycode 58 = Control
# ⇔
#     keycode 58 = Control Control ...
#                          ├─────────┘
#                          └ 256 times
#
# If that were the case, we wouldn't need the next `keymaps` statement.
# But, in practice, we DO need it.
#
# Maybe a modifier keysym is an exception.
#}}}
keymaps 0-2,4,6,8,12
keycode 58 = Control
keycode 28 = Control

