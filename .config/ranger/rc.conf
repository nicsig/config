# Default config:
# ~/GitRepos/ranger/ranger/config/rc.conf

# Do NOT show hostname in titlebar
set hostname_in_titlebar false

# Do NOT add the highlighted file to the path in the titlebar
set show_selection_in_titlebar false

# Draw borders around columns?
set draw_borders true

# Display the directory name in tabs?
set dirname_in_tabs true

# preview images with the `w3mimgdisplay` library
# dependency:    w3m-img
# if you don't have a `scope.sh` file, create one with:
#     ranger --copy-config=scope
set preview_images true
set preview_images_method w3m
# FIXME:
# Works but sometimes it makes ranger crash.
# In particular when we select a file with the extension `.djvu`.

# Abbreviate $HOME with ~ in the titlebar (first line) of ranger?
set tilde_in_titlebar true

# FIXME:
# ranger crashes when we hit `=` to change permissions on a file
# discovered this key binding here:
# http://ranger.nongnu.org/cheatsheet.svg

# edit config, then resource it when done
map X chain shell vim -p ~/.config/ranger/rc.conf; source ~/.config/ranger/rc.conf

# manage trash {{{
#
# empty trash
#
# the package `trash-cli` needs to be installed (`api trash-cli`)
# For more info:    https://github.com/andreafrancia/trash-cli
map be  shell trash-empty

# list trash contents
#
# We could use `trash-list` but its output is noisy, so instead we use `gvfs-ls`
# `gvfs-ls` seems to be a command part of a gnome package, installed by default
# in some DEs. The main difference between `gvfs-ls` and `ls`, `gvfs-cat` and
# `cat`, `gvfs-cp` and `cp` … is that the `gvfs-…` commands can also work on
# remote locations.
map bl  shell -p gvfs-ls -h trash://
#              │          │
#              │          └── --hidden = show hidden files
#              └── redirect output to the pager

# restore trash
map br  shell restore-trash

# put in trash
map bt  shell trash-put -- %s

# put in trash no matter what
map <DELETE>  shell gvfs-trash -f -- %s
#                               │     │
#                               │     └── ranger macro: the selected files in the current directory
#                               └── --force, ignore nonexistent and non-deletable files

# }}}

# Tabs
map <Space>t          tab_new ~
map <Space>q          tab_close
map <Space><Space>    mark_files toggle=True
map <C-n>             tab_move 1
map <C-p>             tab_move -1
