# Default config:
#     ~/Vcs/ranger/ranger/config/rc.conf

# Options {{{1

# Do NOT show hostname in titlebar
set hostname_in_titlebar false

# Do NOT add the highlighted file to the path in the titlebar
set show_selection_in_titlebar false

# Draw borders around columns?
set draw_borders true

# Display the directory name in tabs?
set dirname_in_tabs true

# preview images with the `w3mimgdisplay` library
# dependency:    w3m-img
# if you don't have a `scope.sh` file, create one with:
#     ranger --copy-config=scope
set preview_images true
# ueberzug gives better results than w3mimgdisplay{{{
#
# First, w3mimgdisplay makes the image frequently disappear when we use st.
#
# Second, it raises this error on a `.djvu` file:
#
#     ('Failed to execute w3mimgdisplay', [])
#
# Which makes ranger crash when you start it in debug mode.
#
# ---
#
# To install ueberzug, run:
#
#     $ python3 -m pip install --user ueberzug
#}}}
set preview_images_method ueberzug

# Show hidden files? You can toggle this by typing 'gh'
set show_hidden false

# Abbreviate $HOME with ~ in the titlebar (first line) of ranger?
set tilde_in_titlebar true

# Mappings {{{1
# Miscellaneous {{{2

# Source: https://github.com/ranger/ranger/wiki/Keybindings#open-highlighted-files-in-splits-windows
map ev shell [ -n "$TMUX" ] && tmux split-window -h rifle %f
map es shell [ -n "$TMUX" ] && tmux split-window -v rifle %f
map ew shell [ -n "$TMUX" ] && tmux new-window rifle %f

# edit config, then resource it when done
map  ee  chain shell vim -p ~/.config/ranger/rc.conf; source ~/.config/ranger/rc.conf

# toggle hidden entries
# `zh` is used by default; we prefer `gh` because that's what we used in Vim.
map  gh  set show_hidden!

map  xt  shell atool -x -- %s

# `fasd`, `fzf_fasd` and `fzf_fd` are custom commands installed from `~/.config/ranger/commands.py`.

# populate the command-line with `fasd` and a space
# From `man ranger`:{{{
#
# COMMANDS :
#
# > console [-pN] command
# >   Opens the console with the command already typed in.  The cursor is
# >   placed at N.
#
# CONCEPTS > MACROS:
#
# > The macro %space expands to a space character. You can use it to add
# > spaces to the end of a command when needed, while preventing editors to
# > strip spaces off the end of the line automatically.
#}}}
map zj console fasd%space

# fuzzy search frecent files
map zz fzf_fasd
# fuzzy search files
map zZ fzf_fd

# Selecting {{{2

map  <space><space>  mark_files toggle=True

map  v   toggle_visual_mode
map  uv  toggle_visual_mode reverse=True

map  V   mark_files all=True toggle=True
map  uV  mark_files all=True val=False

# Tabs {{{2

map  <space>t  tab_new ~
map  <space>q  tab_close
map  <space>u  tab_restore

map  <c-n>     tab_move 1
map  <c-p>     tab_move -1

# Tagging {{{2

map  TT      tag_toggle
map  uT      tag_remove
map  T<any>  tag_toggle tag=%any

# Trash {{{2
# te     empty trash {{{3
#
# `trash-empty` is a command provided by the `trash-cli` package.
# Same thing for the commands `restore-trash` and `trash-put`.
# Make sure it's installed.
# For more info:
#
#         https://github.com/andreafrancia/trash-cli

map  te  shell -p trash-empty

# tl     list trash contents {{{3
#
# We could use `trash-list` but its output is noisy (date, hour, full paths), so
# instead we  use `gvfs-ls`.
# This command  is provided by  the package  `gvfs-bin` installed by  default in
# some DEs.
#
# The `gvfs` acronym probably means Gnome Virtual FileSystem.
#
# The main difference between:
#
#    - `gvfs-ls`   vs  `ls`,
#    - `gvfs-cat`  vs  `cat`,
#    - `gvfs-cp`   vs  `cp`
#    ...
#
# Is that `gvfs-xyz` can also work on remote locations.

map  tl  shell -p gvfs-ls -h trash://
#               │          │
#               │          └ --hidden = show hidden files
#               └ redirect output to the pager

# tr     restore trash {{{3

map  tr  shell restore-trash

# tp     put in trash {{{3

map  tp  shell trash-put -- %s

# DEL    put in trash no matter what {{{3

map  <DELETE>  shell gvfs-trash -f -- %s
#                                │     │
#                                │     └ ranger macro: the selected files in the current directory
#                                │
#                                └ --force, ignore nonexistent and non-deletable files

