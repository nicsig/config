# true colors {{{1

# Why the `if-shell ` guard?{{{
#
# Setting `Tc` may prevent other settings to work, like these for example:
#
#     set -gw window-style        'bg=#cacaca'
#     set -gw window-active-style 'bg=#dbd6d1'
#
# The issue is specific to terminals which don't support true colors.
#
# MWE:
#
#      $ cat <<'EOF' >/tmp/tmux.conf
#
#      set -as terminal-overrides '*-256color:Tc'
#      set -gw window-style         'bg=#000000'
#      set -gw window-active-style  'bg=#ffffff'
#
#      set -g prefix 'M-space'
#      unbind '"'
#      bind _ splitw -v
#      bind M-space last-pane
#      EOF
#
#      # start xfce4-terminal 0.6.3
#
#      $ tmux -L test -f /tmp/tmux.conf
#
#      pfx _
#      pfx SPC
#
# ---
#
# Alternatively, you could:
#
#    - use `colour123` instead of `#ab1234`
#    - use a terminal supporting true colors
#}}}
# Why `*-256color`?{{{
#
# It should  prevent the option  from being set  for a terminal  supporting less
# than 256 colors; if it doesn't even  support 256 colors, it can't support true
# colors either.
#}}}
if '[ "$COLORTERM" != "xfce4-terminal" ]' 'set -as terminal-overrides "*-256color:Tc"'
#                                               ││
#                                               │└ server option
#                                               └ append

# cursor shape {{{1

# What does this do?{{{
#
# In Nvim, `'guicursor'`  relies on the terminfo extensions `Ss`  and `Se` being
# correctly set to change the shape of the cursor.
# Nvim correctly sets them when `$TERM` contains `xterm` in the outer terminal.
#
# But not if it's `rxvt-unicode-256color`.  And the terminfo entry of the latter
# doesn't have any description for the `Ss` and `Se` capabilities.
#
# So, if  we don't set  `Ss` and `Se` here,  tmux won't recognize  the sequences
# sent by Nvim.
#}}}
set -as terminal-overrides '*:Ss=\E[%p1%d q:Se=\E[2 q'
#                           │ ├┘ ├────────┘ ├┘ ├────┘ {{{
#                           │ │  │          │  └ override with this keysequence;
#                           │ │  │          │    restore the cursor shape to a block
#                           │ │  │          │
#                           │ │  │          └ `Se` capability in `terminfo` db
#                           │ │  │
#                           │ │  └ override the current value with this new one;
#                           │ │    set the cursor shape to the one specified by
#                           │ │    the digit `%d`
#                           │ │
#                           │ └ `Ss` capability in the `terminfo` db (in Nvim, see `:h tui-cursor-shape`)
#                           └ for all terminals (no matter `$TERM`)
#}}}

# cursor color {{{1

# What does this do?{{{
#
# It adds the support for OSC 12  sequences, which allow us to change the cursor
# color:
#
#     $ printf '\033]12;123\007'
#
# We rely on this to change the cursor color from Vim (by pressing `coC`).
#
# Without this  line, tmux wouldn't understand  a sequence sent by  a program to
# the terminal to set the cursor color.
#
# See `$ man tmux /Cs`.
#}}}
#   Is it necessary for all terminals?{{{
#
# No.
# For example, it's useless for xfce4-terminal and guake.
# But it's necessary for urxvt.
#}}}
#   When is it useless?{{{
#
# It's useless  for some terminals,  on the  condition that they  understand the
# sequences changing the cursor color, *and*  that their `$TERM` is `xterm` or a
# derivative.
# Because if it's `xterm`, tmux will  automatically add and set the unofficial
# extensions `Cs` and `Cr` in the terminfo db.
#}}}
#   How did you find the value?{{{
#
#     $ TERM=xterm tmux -Ltest -f/dev/null
#     $ tmux info V
#     /Cs
#
# See also:
#     http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-Operating-System-Commands
#
#     OSC Ps ; Pt BEL
#     Ps = 1 2  -> Change text cursor color to Pt.  (Cs)
#     Ps = 1 1 2  -> Reset text cursor color.       (Cr)
#}}}
set -as terminal-overrides '*:Cs=\E]12;%p1%s\007'
#                                ├─┘├┘ ├───┘├──┘{{{
#                                │  │  │    └ BEL
#                                │  │  └ Pt
#                                │  └ Ps
#                                └ OSC
#}}}

# What does the `Cr` capability enable?{{{
#
# It allows you to restore the default cursor colour.
#}}}
#   Why don't you set it in the st terminal?{{{
#
# st would generate this error:
#
#     erresc: unknown str ESC]112ESC\
#
# This  is  because   our  patch  `~/.config/st/patches/99_osc_12.diff`  doesn't
# implement the sequence OSC 112.
#
# For the  moment, this is ok. I  don't need to  reset the cursor color,  but it
# would be nice to have it in the future.
#}}}

# Why do you double the backslashes?{{{
#
# If you don't double the  backslashes, they'll be removed during the evaluation
# of the string; you can check by looking at the output of `$ tmux info | grep Cs`.
# There's no way around that (i.e. using single quotes wouldn't help).
#}}}
if '[ "$TERM" != "st-256color" ]' 'set -as terminal-overrides "*:Cr=\\E]112\\007"'

