# What are  the tools  useful to  accelerate the learning  of a  new programming
# language?
#
#    - snippets engine (stay focused)
#    - linter
#    - formatter (stay consistent; enforce styleguide)
#    - REPL/compiler (evaluate code to check it works)
#    - integrated documentation
#    pizza
#    - ?



# TODO:
# In your functions, try to create as few temporary files as you can.
# Maybe you could eliminate some of them, using process redirection:
#
#         https://www.reddit.com/r/vim/comments/7czgrd/profiling_and_optimizing_vim/dpvzt9h/
#
# Example:
#
#                                                           ┌ last argument of the previous command,
#                                                           │ here it should be `/tmp/vim.log` (could use `$_` too)
#                                                           ├┐
#         vim -c 'q' --startuptime /tmp/vim.log && tail -n1 !$
#             vs
#         vim -c 'q' --startuptime >(tail -n1)



# Recovered Aliases:

alias checki='sudo rlwrap checkinstall -y'
alias fzo='sh -c "$(fc -ln -1)|fzf"'

alias mount='grc mount'
# alias traceroute='grc traceroute'
traceroute() {
  grc traceroute "$1"
}

alias conky_reload='killall -SIGUSR1 conky'
alias xresources_reload='xrdb -cpp "$(command -v cpp) -traditional-cpp" ~/.Xresources'
alias web='WWW_HOME=new.startpage.com w3m'


# Recovered Functions:
alert() {
  notify-send --urgency=low \
    -i $([[ "$?" -eq 0 ]] && printf -- 'terminal\n' || printf -- 'error\n') \
    "$(history | tail -n1 | sed 's/^\s*[0-9]\+\s*// ; s/[;&|]\s*alert$//')"
}

img_w3m() {
	w3m -o imgdisplay=/usr/lib/w3m/w3mimgdisplay "$1"
}

# Testing eNViRonment
tnvr() {
  cd "$(mktemp -d /tmp/.tvr.XXXXXXXXXX)"
  cp -R "${OLDPWD}"/* .
}

# Alias {{{1

#              ┌ --no-group in a long listing, don't print group names
#              │┌ like -l, but do not list owner
#              ││ ┌ --almost-all do not list implied . and ..
#              ││ │
alias lsa='ls -GghA'
#       │
#       └ mnemonic: all

#                             ┌ --indicator-style=slash append / indicator to directories
#                             │
alias lsf='ls --color=always -p | grep -v "/$"'
#       │
#       └ mnemonic: files only

# -X    Sort alphabetically by extension, then by the rest.
#       Directories can't have an extension, so they always come first.
#       Handy to separate files from directories.
#
# Mnemnonic:    x for eXtension
alias lsx='ls -lX'

# TODO: Maybe replace `ls++` with `exa`:
# https://github.com/ogham/exa

# ls folders only
#
# -1    list one file per line
# -d, --directory
#       list directory entries instead of contents,
#       and do not dereference symbolic links
#
# ls *        list everything
# ls */       list every folder and their contents
# ls -d */    list every folder (only their entries)
alias lsd='ls++ -1d */'
# n for new?
alias lsn='ls -Ggthr --time=ctime'

# o for owner?
alias lso='ls++ --potsf'
# s for size?
alias lss='ls++ --psf'
# ls by time/changes, newest at bottom
#
# -c    with  -lt:
#       sort  by,  and show, ctime (time of last modification of file status information)
#
# Mnemonic:    t for Time
alias lst='ls++ --ptsf'
